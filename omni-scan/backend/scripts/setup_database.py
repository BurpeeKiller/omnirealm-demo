#!/usr/bin/env python3
"""
Script pour initialiser la base de donn√©es OmniScan
"""

import sys
from app.utils.logger import logger
from pathlib import Path

# Ajouter le r√©pertoire parent au path
sys.path.append(str(Path(__file__).parent.parent))

from supabase import create_client, Client
from app.core.config import settings

def setup_database():
    """Cr√©er les tables n√©cessaires via l'API Supabase"""
    
    logger.info("üîß Configuration de la base de donn√©es OmniScan...")
    
    # Cr√©er le client Supabase avec la cl√© service (admin)
    supabase: Client = create_client(
        settings.supabase_url,
        settings.supabase_service_key or settings.supabase_anon_key
    )
    
    # Lire le fichier SQL
    migration_path = Path(__file__).parent.parent.parent / "supabase" / "migrations" / "001_initial_schema.sql"
    
    if not migration_path.exists():
        logger.info(f"‚ùå Fichier de migration non trouv√© : {migration_path}")
        return False
    
    # Note: Supabase ne permet pas l'ex√©cution directe de SQL via l'API REST
    # Pour le d√©veloppement local, nous devons utiliser une approche diff√©rente
    
    logger.info("\nüìù Instructions pour cr√©er les tables :")
    logger.info("1. Ouvrez Supabase Studio : http://localhost:54323")
    logger.info("2. Allez dans SQL Editor")
    logger.info("3. Copiez et ex√©cutez le contenu du fichier :")
    logger.info(f"   {migration_path}")
    logger.info("\nOu ex√©cutez cette commande si vous avez psql :")
    logger.info(f"   psql postgresql://postgres:postgres@localhost:54322/postgres -f {migration_path}")
    
    # Tester la connexion
    try:
        # Essayer de lire une table (va √©chouer si elle n'existe pas)
        supabase.table("documents").select("count").execute()
        logger.info("\n‚úÖ Tables d√©j√† cr√©√©es !")
        return True
    except Exception:
        logger.info("\n‚ö†Ô∏è  Les tables n'existent pas encore.")
        logger.info("   Veuillez suivre les instructions ci-dessus pour les cr√©er.")
        return False

if __name__ == "__main__":
    setup_database()